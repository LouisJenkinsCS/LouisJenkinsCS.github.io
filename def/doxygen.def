AutoGen Definitions dummy;
struct = {
  cp-id     = 'struct_string___utils';
  cp-name   = 'String_Utils';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1aa295704dbae3b08709ed3d36fa562843';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'compare';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '159';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1a3f85784009f04048b40078fc2a86bd93';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'contains';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '160';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Compares two strings. (string_one - string_two) (Options: IGNORE_CASE)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1ad3251d14f6d70d7b8a14a2f2e693fabe';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'equals';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '161';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Checks if a string is inside of another string. 1 if true, 0 if false (Options: IGNORE_CASE)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1a58de371476767a271dc657f57f5bd5da';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'length';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '162';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Checks if two strings are equal. 1 if equal, 0 if not. (Options: IGNORE_CASE)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1aad837adc48fdcd287e13c6e845350541';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'count';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '163';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns length of string.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1a2e0c72da8d89b7706e0dde7b033f6f6c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'starts_with';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '164';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns occurrences of substring in string. (Options: IGNORE_CASE)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1acb04b0d3ebef7b0bbf2a1dd85c21c1f5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ends_with';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '165';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Checks if string starts with substring (Options: IGNORE_CASE)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1a4c735a3556a0e63300f6c23e36668d08';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'index_of';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '166';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Checks if string ends with substring (Options: IGNORE_CASE)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1a165241eff2c5eaaf582e1e38f753d36a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'char_at';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '167';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns start index of substring in string. (Options: IGNORE_CASE)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1a381c718b857c1e1791c0528134a53947';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'substring';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '168';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns the character at index in string (or last char if out of bounds)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1a66942fc862667d85616e0ce9acf4b2c9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'between';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '169';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns a substring from beginning to end of a string. (Options: See Copy)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1a75ebff0bc901abc33f30d46f5db88d66';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'copy';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '170';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns a substring between the first occurrences of the two substrings given. (Options: MODIFY, IGNORE_CASE)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1ae83461b87a5dd02592e517a2cb22b37d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'concat';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '171';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns a copy of the string (Options: LOWERCASE, UPPERCASE, REVERSE)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1a76ddd153562d3e5cc35b28e6cad86416';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'capitalize';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '172';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Concatenates two strings. (Options: MODIFY)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1ac942d3f461814d4649f55f5bf577b954';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'join';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '173';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Capitalizes the first character in the first word. (Options: Modify)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1a02777c13e79db30115643ae7d63ee7a1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'trim';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '174';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Joins an array of strings into one string. (Options: NONE)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1a15fa9ed7b6ac4791b3d3885b69b361b0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '175';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Trims white spaces at beginning and end of string. (Options: MODIFY)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1aabf2d796331e3bbc3d00e7d386b931f0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'reverse';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '176';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets first string to second string. (Options: See Copy)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1a490b7ad14aa39447ea1e261b3f5398fa';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'concat_all';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '177';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Reverses the string. (Options: MODIFY);.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1ab981dab5e80222905fd97d838ad82219';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'replace';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '178';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Concatenates all strings passed to it into one. (Options: MODIFY)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1a65e07feab3b61c0bb51c9b15dcb00c22';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'from';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '179';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Replaces all of a char with another. (Options: MODIFY, IGNORE_CASE)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1af7187b0f8160f90ac71ecfab71b60ff6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'from_token';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '180';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns a substring from index to end of string. (Options: MODIFY)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1a9171295acb6faebe83a9748eb54fac9f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'to_lowercase';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '181';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns a substring from a substring (Option: MODIFY, FIRST, LAST)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1ad0509a3af747c289031c30a2090b51e4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'to_uppercase';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '182';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns an lowercase string. (Options: MODIFY)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1a6e0ff9f0639b20ff2f8e890d9cd3a52e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char **(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'split';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '183';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns an uppercase string. (Options: MODIFY)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1a74a8e43b4ec773c1127882608bc1988a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char **(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'combine';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '184';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Splits a string into an array of strings based on a delimiter. (Options: NONE)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1a0c2d1f4cb2b322fbf9f3d0c402549ff3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char **(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'add_to';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '185';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Not implemented.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1abfe28f997f8aeb3f694f6077b2074fe5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char **(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'remove_from';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '186';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Not implemented.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1a1f06d8659ad94939ae299f55d9ede495';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char **(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sort';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '187';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Not implemented.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1a7c06608656a34556a5780d7516979bf7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'free_array';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '188';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Not implemented.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1acb4ba735906a187651cb53538f6ec070';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int *(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_bytes';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '189';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Frees an array of strings. NOTE: This function frees the contents, but cannot NULL the pointer.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_string___utils_1adb024a194f2233b94721c1d45940be23';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void(*
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'update';
      sec-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      sec-mem-desc-line = '190';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get an array of bytes of a string.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
  cp-fileline  = '158';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
file = {
  file-id   = '_string___utils_8c';
  file-name = 'String_Utils.c';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a7a0e41f91bb4d4d5fdebf386a35cd7a7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_concat';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string_one';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string_two';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '3';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Concatenates two strings together. Depending on parameters, it will modify the
the first string as it's destination, or it will return a separate string.
@param string_one The string the second string is going to be concatenated onto.
@param string_two The string which will be concatenated on the first string.
@param parameters NONE | MODIFY
@return Returns the concatenated string or NULL if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a30241753fe78353b9973236a34bcf307';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_update';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
String_Utils *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'self';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '18';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Unused, will remove at later date if no use has been found.
@param self The String_Utils struct.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a56bd6b8ff9c389e6e3fffa6a110e7bde';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_compare';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string_one';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string_two';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '22';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Compares two functions. If string_one > string_two, then returns > 0; 
If string_one < string_two, returns < 0;
If string_one == string_two, returns 0;
@param string_one First string to compare with
@param string_two Second string to compare with
@param parameters NONE
@return (string_one - string_two) (Read above)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a44a2be3df919f8a9c7fc2f44ea8b5982';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_char_at';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'index';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '29';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns the char at the position, but if the index is greater than the overall
length of the string, the index is set to be the very last character in the string.
@param string String to retrieve character from.
@param index Index of the char.
@return The char at the requested index or the last index if index > strlen(string) - 1 or NULL if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a451d4e6adca8087d94972b553de2564b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_contains';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'search';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '34';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Checks to see if the string contains the substring. 
@param string The string
@param search Substring to find
@param parameters NONE | IGNORE_CASE
@return 1 if found, 0 if not found or 0 if a NULL string is passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a89fedbcace513fa5fb75601087d98d91';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_to_lowercase';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '41';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Creates a copy of the string and converts it to lowercase. Either returns the copy
or modifies the original string depending on the parameter passed.
@param string String to be manipulated
@param parameter NONE | MODIFY
@return Lowercase string, or NULL if passed a NULL string.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a0fd8c4bd6afa2e8521dfbfc6ddc09824';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_to_uppercase';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '55';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Creates a copy of the string and converts it to uppercase. Either returns the copy
or modifies the original string depending on the parameter passed.
@param string String to be modified
@param parameter NONE | MODIFY
@return Uppercase string, or NULL if passed a NULL string.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a7103f747245bb62eb3524c03f1f00a43';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_get_bytes';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '69';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns an array of bytes of the string passed. 
Note: A char is a byte, but this will return the number representation of
said bytes, an array of them for each character in the string.
Author's Note: A bytes_to_string method may be added at a later
date if I ever find a use for this. Was added because Java has one like this.
@param string The string to turn into an array of bytes.
@return Array of bytes (unsigned int *) or NULL if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1ad164284a020f94e9b6505b4214aff248';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_equals';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string_one';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string_two';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '77';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Checks to see if two strings are equal.
@param string_one First string to compare
@param string_two Second string to compare
@param parameter NONE | IGNORE_CASE
@return 1 if equal, 0 if not or NULL string passed. 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1aede33f9846ae7136a3988e50db11ccde';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_copy';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '83';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Creates a copy of the given string. Depending on parameters, it can return
a variant of the string, I.E REVERSE returns a copy of the string in REVERSE.
@param string String to return a copy of.
@param parameter NONE | REVERSE | LOWERCASE | UPPERCASE
@return A copy of the string, differs based on parameter passed, or NULL if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a6158ca135eb72dacd7f7b9b55153b269';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_from';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'index';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '93';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns a copy of the string from the given index, or the last index of the string
if index > strlen(string) - 1.
@param string String to be operated on.
@param index The start of where in the string you want return.
@param parameter NONE | MODIFY
@return A copy of the string starting at the position, or NULL if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a6303d86cb3f507c60954fb5de9c4b0e7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_length';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '109';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns the length of the string passed.
@param string String to get the length of
@return strlen(string) or 0 if NULL_STRING
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a577beab60b8d129efab525c863e636f1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_from_token';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'substring';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '114';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns a copy of the string from the first (or last) substring is found.
@param string String to search
@param substring Substring to search for
@param parameter NONE | MODIFY | LAST
@return A copy of the string from where the substring is found, NULL if not found or if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1aea4bb14f719f46bb2b980bdc3dc09dd9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char **
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_split';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'delimiter';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '137';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Splits a string into an array of strings based on delimiter passed. It should
be noted that size must be initialized, because the size of the new string array
is recorded in the passed size_t pointer.
@param string String to be split.
@param delimiter Delimiter to look for when splitting.
@param size Records size of the string array
@param parameter NONE
@return The array of strings, plus sets size to record the size of the array; or NULL if NULL string passed (or size if NULL).
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a997cd7ae6a79650e1a5294224aef4bd0';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_set';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string_one';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string_two';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '160';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets one equal to another string.
@param string_one The reference to the string to be changed (Use & operator)
@param string_two The second string it is going be set to.
@param parameter NONE | REVERSE | LOWERCASE | UPPERCASE
@return string_one which it sets, or NULL if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1ac6168ea21784d1f22f88bf16a3facf49';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_concat_all';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'amount';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
...
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '173';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Concatenates all strings passed to it.
@param parameter NONE | MODIFY
@param amount Amount of strings to be concatenated
@param string The first string to be passed to it
@param ... The rest of the strings to be passed.
@return The concatenated string, or NULL if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a242cef7afc9fb42d9a4944109bf1ef30';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_reverse';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '193';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Reverses the given string.
@param string String to be operated on.
@param parameter NONE | MODIFY
@return The reversed string or NULL if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a19d96c35d829ea6038f0b28f6cb97708';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_replace';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'old_char';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'new_char';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '207';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Replaces all of one character in a string with another character.
@param string The string the characters are to be replaced
@param old_char The characters to be found
@param new_char The characters that will replace the old_char
@param parameter NONE | IGNORE_CASE | MODIFY
@return The new string with replaced characters.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a291584049e79b1e9d5106946493917b0';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_join';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'array_of_strings';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'delimiter';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '230';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Joins an array of strings together into one big string with the delimiter prepended to each string.
@param array_of_strings The array of strings to be joined.
@param delimiter Delimiter to be prepended to each string after the first
@param size The size of the array
@param parameter NONE
@return The new string that was joined, or NULL if NULL string or array of strings passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a19b6a52851ccaf80cff3efababec16d8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_starts_with';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'find';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '243';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Checks to see if a string starts with a substring
@param string The string to check
@param find The substring to check for.
@param parameter NONE | IGNORE_CASE
@return 1 if true, 0 if false or if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a838df7f22aeff1f570296c0d13dc94c8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_ends_with';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'find';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '252';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Checks to see if a string ends with a substring.
@param string The string to check.
@param find The substring to check for.
@param parameter NONE | IGNORE_CASE
@return  1 if true, 0 if false or if NULL string passed
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a260d738f3d50f18804c1738de5fec0b1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_free_array';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'array';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '263';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Experimental Function: Frees all contents of the array
NOTE: Does not NULL the pointer to the array, hence accessing the array after
leads to undefined behavior.
@param array The array of free memory of
@param size Size of the array.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a8ff67ea5679f39a58693cd3d46475c60';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_capitalize';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '273';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Capitalizes the first character in the string.
@param string The string to capitalize.
@param parameter NONE | MODIFY
@return The capitalized string or NULL if NULL string passed..
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a1099350097205a2f85d1e63dfee09517';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_trim';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '281';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Trims the string of all leading and trailing spaces.
@param string String to be trimmed.
@param parameter NONE | MODIFY
@return Trimmed string or NULL if NULL string passed..
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a116b4c71040c8afb124cb7e66f6fcdf9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_substring';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'begin';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'end';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '301';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns a substring of the string.
@param string String to get a substring of.
@param begin The beginning index.
@param end The end index.
@param parameter NONE | MODIFY | REVERSE | LOWERCASE | UPPERCASE
@return The substring of the string, or NULL if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a6d2403e581852c64f7aacdbbfaa320fe';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_index_of';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'substring';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '311';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Finds the index of the first or the last index of a given substring.
@param string String to be searched for
@param substring Substring to be searched for.
@param parameter NONE | IGNORE_CASE | LAST
@return Index of the starting position of the found substring, or -1 if not found or NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a2a8bed59ba6cdf31ae5c4b4b858b00ce';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_count';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'substring';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '330';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Counts occurrences that the delimiter (or substring) occurs in a string.
@param string String to search
@param delimiter Delimiter or Substring to search for
@param parameter NONE | IGNORE_CASE
@return Amount of times the delimiter appears in your string, or 0 if NULL string passed
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1a19c41e0cbe58f44271fbeb9de7f80c74';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_between';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'start';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'end';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '347';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns a substring from between a start and end substring or delimiter in a string.
@param string String to be searched.
@param start The first substring or delimiter to search for
@param end The last substring or delimiter to search for.
@param parameter NONE | IGNORE_CASE
@return The substring of what is between start and end, or NULL if NULL string is passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8c_1ae395bca01c070cbfb7b55681608a468d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
String_Utils *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_create';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
      func-mem-desc-line = '356';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Creates the mega-struct Struct_Utils and initializes all implemented callbacks.
@return Pointer to the initialized struct or NULL if could not initialize.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.c';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_string___utils_8h';
  file-name = 'String_Utils.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_string___utils_8h_1a655c84af1b0034986ff56e12e84f983d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'NONE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1 << 0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      define-mem-desc-line = '58';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
@Author: Louis Jenkins
@Version: 1.0

What is String_Utils? String_Utils is basically an attempt at implementing a
very useful, somewhat efficient String library with basic string manipulations
comparators, and utilities offered in object oriented languages. In fact, this
is based on Java's String object's methods, hence the name of most of the functions.

My reason for creating this is, not just for fun, and boy was it ever, but 
also because I haven't found any attempt at creating a string library the way
I did. I rather dislike the way C's String library handles thing, it's too
minimal with how it abstracts and encapsulates it's functions, and plus it 
doesn't even have the basic functions that most people use day-to-day, but they
do however give you the tools to do it yourself, so I decided to. 

String_Utils has a plethora of well-tested (as well as you can with one person
writing this in one week) functions that you've grown to love in OOP languages
like Java, I.E Substring, Index_OF, Split/Join, etc. I attempted to implement
them as closely as they would be in Java, although of course since C and Java
are vastly different languages, with different paradigms, it's impossible
to make it exactly like so. 

Another thing String_Utils offers is a super-cool (IMO, as the creator) idea
of using a mega-struct which serves as a callback-machine, WITH basic documentation.
If contains a callback function to every single function created here, and makes it a lot
easier to call my functions too. For example, lets say you want to concat two strings.
Normally you'd have to call String_Utils_concat(...), which can be rather long if you're
calling it String_Utils_* over and over, even nested in a statement, so a solution
I devised was, lets say you have an instnace of the struct called su, then
it's a lot easier to call su->concat than it is to call String_Utils_concat. 
The next cool part is the documentation! At least in NetBeans, when you 
dereference the struct (or just access the member variable if you prefer that)
you can easily see an alphabetically sorted list of all of the functions as
well a short 1 - 2 sentence description of each function.

I hope you enjoy my first project as much as I will, I worked very hard on it.
Hope it shows! Enjoy!
General Notes: More than one parameter can be passed to any given function, 
but of course, they must make sense. If you pass a function which supports it both
LOWERCASE and UPPERCASE it'll just be the same string you ended up with before
passing the parameters. Also, passing nonsensical parameters aren't likely to do anything
like NONE | REVERSE will just REVERSE as NONE does nothing. The parameters are
very basic and bare bones, but they will be (most likely) developed into something
more full fledged.
NONE: The default for a function. This is what you pass if you really don't need
the other options for any given function.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_string___utils_8h_1a1f397c74f7f8ba3952858c70eb19d082';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'IGNORE_CASE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1 << 1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      define-mem-desc-line = '65';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
IGNORE_CASE: For functions that deal with string comparisons and manipulations. This will
do just as the macro says, before comparison it will compare the lowercase of whatever
it is comparing (without making any modifications) so as the original case doesn't matter.
Note: The default is going to be case sensitive. 
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_string___utils_8h_1a56bda2bdd8bf16c41b6bfc2a97da9789';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MODIFY';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1 << 2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      define-mem-desc-line = '72';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
MODIFY: For functions which deal with string manipulations, this sets the function
to modify the string after it's operations are finished, although it will still return
it. Note: The default is not going to modify the string.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_string___utils_8h_1a210af1d04c8870416a556f0e9a5194fd';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'LAST';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1 << 3
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      define-mem-desc-line = '80';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
LAST: For string searches, will attempt to find the last occurrence of whatever it is
it will be searching for. Note: The default is going to return the first, there is no middle.
(Author Note: Only one function uses this, although I'll be updating and adding more functionality,
so there'll be more options for this in the future!)
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_string___utils_8h_1a00548cec6d104932bf79a65bac1c47e8';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'REVERSE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1 << 4
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      define-mem-desc-line = '86';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
REVERSE: For string manipulations, this will reverse the string after the function finishes it's operations.
Note: The default is going to be normal, non-reversed (duh!)
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_string___utils_8h_1ab255ee678532f4b4b8da3fdc422ef1da';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'LOWERCASE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1 << 5
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      define-mem-desc-line = '92';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
LOWERCASE: For string manipulations, will convert the string to lowercase.
Note: The default is going to be normal.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_string___utils_8h_1a7d27cdb240c1d7b6c693a4344c08216d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'UPPERCASE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1 << 6
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      define-mem-desc-line = '98';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
UPPERCASE: For string manipulations, will convert the string to uppercase.
Note: The default is going to be normal.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_string___utils_8h_1ad72dbcf6d0153db1b8d8a58001feed83';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DEBUG';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      define-mem-desc-line = '103';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
DEBUG: Toggle for whether debug information prints or not
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_string___utils_8h_1a1902c0bf6870b5b9a03c49b420ebcb18';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DEBUG_PRINT';
      define-mem-param  = {
        define-mem-def-name = 'MESSAGE';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(DEBUG ? fprintf(stderr, MESSAGE) : DEBUG)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      define-mem-desc-line = '108';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
DEBUG_PRINT: Prints a message if Debug is enabled
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_string___utils_8h_1aba2ef1e6215ee3d0d42126a1710bf472';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DEBUG_PRINTF';
      define-mem-param  = {
        define-mem-def-name = 'MESSAGE';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = '...';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(DEBUG ? fprintf(stderr, MESSAGE, __VA_ARGS__) : DEBUG)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      define-mem-desc-line = '113';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
DEBUG_PRINTF: Prints a formatted message if Debug is enabled (Like printf)
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_string___utils_8h_1a350c35afa271e89ddf2c66b8c5c17024';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SELECTED';
      define-mem-param  = {
        define-mem-def-name = 'ARGUMENT';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'MACRO';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((ARGUMENT & MACRO))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      define-mem-desc-line = '119';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
SELECTED: Uses bit masking to determine whether or not a certain parameter was passed to it,
works with more than one. (I.E IGNORE_CASE | IGNORE_CASE | MODIFY)
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_string___utils_8h_1a5b53312bbba70b919312015af1d47bc6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'VALIDATE_PTR';
      define-mem-param  = {
        define-mem-def-name = 'PTR';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'RETURN_VAL';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
do { if(PTR == NULL){ \
        DEBUG_PRINTF("Error: %s == NULL\n", #PTR); return RETURN_VAL;}} while(0)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      define-mem-desc-line = '126';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
VALIDATE_PTR: Used to check whether or not a PTR is NULL or not; will print
a debug message if debug is enabled informing that the name of the variable is NULL.
Also, will return the value passed to it.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_string___utils_8h_1ace0e705f1ba0f99a98c09cc750792b6b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'VALIDATE_PTR_VOID';
      define-mem-param  = {
        define-mem-def-name = 'PTR';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
do { if(PTR == NULL){ \
        DEBUG_PRINTF("Error: %s == NULL\n", #PTR); return;}} while(0)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      define-mem-desc-line = '133';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
VALIDATE_PTR_VOID: Like VALIDATE_PTR, checks for NULL pointer, will print if debug is enabled,
except this will return without returning a value.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_string___utils_8h_1a953e9e21f34a44f6a5ae27fc5a9c8e72';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'INIT';
      define-mem-param  = {
        define-mem-def-name = 'CALLBACK';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(String_Utils_ ##CALLBACK)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      define-mem-desc-line = '141';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
INIT: Used to shorten the arduous task of initializing all of the callbacks in the constructor.
All it does is append the argument passed to it on top of "String_Utils_" to make
it a valid function.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    typedef = {
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = '_string___utils_8h_1ac9abf064ffc6dd4fe46c3820cd635bcd';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
struct String_Utils
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'String_Utils';
      typedef-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      typedef-mem-desc-line = '356';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_
String_Utils contains a collection of callbacks for every function with minimal documentation
to describe what each does, enough to give a gist of what it does if it's not entirely clear.
_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a1fe68615631bdd8c25669670e5b23d22';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_compare';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string_one';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string_two';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameters';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '202';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Compares two functions. If string_one > string_two, then returns > 0; 
If string_one < string_two, returns < 0;
If string_one == string_two, returns 0;
@param string_one First string to compare with
@param string_two Second string to compare with
@param parameters NONE
@return (string_one - string_two) (Read above)
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a45919726dda33c2955db098b4ad79165';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_contains';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'search';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameters';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '211';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Checks to see if the string contains the substring. 
@param string The string
@param search Substring to find
@param parameters NONE | IGNORE_CASE
@return 1 if found, 0 if not found or 0 if a NULL string is passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1ae395bca01c070cbfb7b55681608a468d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
String_Utils *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_create';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '217';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Creates the mega-struct Struct_Utils and initializes all implemented callbacks.
@return Pointer to the initialized struct or NULL if could not initialize.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a89fedbcace513fa5fb75601087d98d91';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_to_lowercase';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '226';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Creates a copy of the string and converts it to lowercase. Either returns the copy
or modifies the original string depending on the parameter passed.
@param string String to be manipulated
@param parameter NONE | MODIFY
@return Lowercase string, or NULL if passed a NULL string.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a0fd8c4bd6afa2e8521dfbfc6ddc09824';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_to_uppercase';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '235';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Creates a copy of the string and converts it to uppercase. Either returns the copy
or modifies the original string depending on the parameter passed.
@param string String to be modified
@param parameter NONE | MODIFY
@return Uppercase string, or NULL if passed a NULL string.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a44a2be3df919f8a9c7fc2f44ea8b5982';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_char_at';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'index';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '244';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns the char at the position, but if the index is greater than the overall
length of the string, the index is set to be the very last character in the string.
@param string String to retrieve character from.
@param index Index of the char.
@return The char at the requested index or the last index if index > strlen(string) - 1 or NULL if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1aa75ce5d025cd1fb61755c3eb903ef683';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_concat';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string_one';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string_two';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameters';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '254';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Concatenates two strings together. Depending on parameters, it will modify the
the first string as it's destination, or it will return a separate string.
@param string_one The string the second string is going to be concatenated onto.
@param string_two The string which will be concatenated on the first string.
@param parameters NONE | MODIFY
@return Returns the concatenated string or NULL if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a30241753fe78353b9973236a34bcf307';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_update';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
String_Utils *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'self';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '260';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Unused, will remove at later date if no use has been found.
@param self The String_Utils struct.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a7103f747245bb62eb3524c03f1f00a43';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_get_bytes';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '271';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns an array of bytes of the string passed. 
Note: A char is a byte, but this will return the number representation of
said bytes, an array of them for each character in the string.
Author's Note: A bytes_to_string method may be added at a later
date if I ever find a use for this. Was added because Java has one like this.
@param string The string to turn into an array of bytes.
@return Array of bytes (unsigned int *) or NULL if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1ad164284a020f94e9b6505b4214aff248';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_equals';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string_one';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string_two';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '280';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Checks to see if two strings are equal.
@param string_one First string to compare
@param string_two Second string to compare
@param parameter NONE | IGNORE_CASE
@return 1 if equal, 0 if not or NULL string passed. 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1aede33f9846ae7136a3988e50db11ccde';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_copy';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '289';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Creates a copy of the given string. Depending on parameters, it can return
a variant of the string, I.E REVERSE returns a copy of the string in REVERSE.
@param string String to return a copy of.
@param parameter NONE | REVERSE | LOWERCASE | UPPERCASE
@return A copy of the string, differs based on parameter passed, or NULL if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1aea4bb14f719f46bb2b980bdc3dc09dd9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char **
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_split';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'delimiter';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '301';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Splits a string into an array of strings based on delimiter passed. It should
be noted that size must be initialized, because the size of the new string array
is recorded in the passed size_t pointer.
@param string String to be split.
@param delimiter Delimiter to look for when splitting.
@param size Records size of the string array
@param parameter NONE
@return The array of strings, plus sets size to record the size of the array; or NULL if NULL string passed (or size if NULL).
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a6158ca135eb72dacd7f7b9b55153b269';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_from';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'index';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '311';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns a copy of the string from the given index, or the last index of the string
if index > strlen(string) - 1.
@param string String to be operated on.
@param index The start of where in the string you want return.
@param parameter NONE | MODIFY
@return A copy of the string starting at the position, or NULL if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a577beab60b8d129efab525c863e636f1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_from_token';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'substring';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '320';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns a copy of the string from the first (or last) substring is found.
@param string String to search
@param substring Substring to search for
@param parameter NONE | MODIFY | LAST
@return A copy of the string from where the substring is found, NULL if not found or if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1ac6168ea21784d1f22f88bf16a3facf49';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_concat_all';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'amount';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
...
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '330';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Concatenates all strings passed to it.
@param parameter NONE | MODIFY
@param amount Amount of strings to be concatenated
@param string The first string to be passed to it
@param ... The rest of the strings to be passed.
@return The concatenated string, or NULL if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a997cd7ae6a79650e1a5294224aef4bd0';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_set';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string_one';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string_two';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '339';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Sets one equal to another string.
@param string_one The reference to the string to be changed (Use & operator)
@param string_two The second string it is going be set to.
@param parameter NONE | REVERSE | LOWERCASE | UPPERCASE
@return string_one which it sets, or NULL if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a242cef7afc9fb42d9a4944109bf1ef30';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_reverse';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '347';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Reverses the given string.
@param string String to be operated on.
@param parameter NONE | MODIFY
@return The reversed string or NULL if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a291584049e79b1e9d5106946493917b0';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_join';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'array_of_strings';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'delimiter';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '357';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Joins an array of strings together into one big string with the delimiter prepended to each string.
@param array_of_strings The array of strings to be joined.
@param delimiter Delimiter to be prepended to each string after the first
@param size The size of the array
@param parameter NONE
@return The new string that was joined, or NULL if NULL string or array of strings passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a19d96c35d829ea6038f0b28f6cb97708';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_replace';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'old_char';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'new_char';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '367';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Replaces all of one character in a string with another character.
@param string The string the characters are to be replaced
@param old_char The characters to be found
@param new_char The characters that will replace the old_char
@param parameter NONE | IGNORE_CASE | MODIFY
@return The new string with replaced characters.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a19b6a52851ccaf80cff3efababec16d8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_starts_with';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'find';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '376';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Checks to see if a string starts with a substring
@param string The string to check
@param find The substring to check for.
@param parameter NONE | IGNORE_CASE
@return 1 if true, 0 if false or if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a838df7f22aeff1f570296c0d13dc94c8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_ends_with';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'find';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '385';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Checks to see if a string ends with a substring.
@param string The string to check.
@param find The substring to check for.
@param parameter NONE | IGNORE_CASE
@return  1 if true, 0 if false or if NULL string passed
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a6303d86cb3f507c60954fb5de9c4b0e7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_length';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '392';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns the length of the string passed.
@param string String to get the length of
@return strlen(string) or 0 if NULL_STRING
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a260d738f3d50f18804c1738de5fec0b1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_free_array';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'array';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
size_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'size';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '401';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Experimental Function: Frees all contents of the array
NOTE: Does not NULL the pointer to the array, hence accessing the array after
leads to undefined behavior.
@param array The array of free memory of
@param size Size of the array.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a116b4c71040c8afb124cb7e66f6fcdf9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_substring';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'begin';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'end';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '411';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns a substring of the string.
@param string String to get a substring of.
@param begin The beginning index.
@param end The end index.
@param parameter NONE | MODIFY | REVERSE | LOWERCASE | UPPERCASE
@return The substring of the string, or NULL if NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a8ff67ea5679f39a58693cd3d46475c60';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_capitalize';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '419';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Capitalizes the first character in the string.
@param string The string to capitalize.
@param parameter NONE | MODIFY
@return The capitalized string or NULL if NULL string passed..
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a1099350097205a2f85d1e63dfee09517';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_trim';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '427';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Trims the string of all leading and trailing spaces.
@param string String to be trimmed.
@param parameter NONE | MODIFY
@return Trimmed string or NULL if NULL string passed..
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a6d2403e581852c64f7aacdbbfaa320fe';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_index_of';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'substring';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '436';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Finds the index of the first or the last index of a given substring.
@param string String to be searched for
@param substring Substring to be searched for.
@param parameter NONE | IGNORE_CASE | LAST
@return Index of the starting position of the found substring, or -1 if not found or NULL string passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1ab5b202562ebf9ca7592b2a5c7967278b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_count';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'delimiter';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '445';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Counts occurrences that the delimiter (or substring) occurs in a string.
@param string String to search
@param delimiter Delimiter or Substring to search for
@param parameter NONE | IGNORE_CASE
@return Amount of times the delimiter appears in your string, or 0 if NULL string passed
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_string___utils_8h_1a19c41e0cbe58f44271fbeb9de7f80c74';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'String_Utils_between';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'string';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'start';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'end';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'parameter';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
      func-mem-desc-line = '455';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Returns a substring from between a start and end substring or delimiter in a string.
@param string String to be searched.
@param start The first substring or delimiter to search for
@param end The last substring or delimiter to search for.
@param parameter NONE | IGNORE_CASE
@return The substring of what is between start and end, or NULL if NULL string is passed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'C:/Users/theif519/Documents/GitHub/C_Utils/Stable/String_Utils/Code/String_Utils.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
